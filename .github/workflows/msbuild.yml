name: MSBuild

on: [push]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}
      
    - name: Download and install Windows SDK
      run: |
        import subprocess
        import urllib.request
        urllib.request.urlretrieve("https://go.microsoft.com/fwlink/p/?LinkId=323507", "sdksetup.exe")
        subprocess.run(["sdksetup.exe", "/q", "/norestart", "/features", "OptionId.WindowsDesktopSoftwareDevelopmentKit", "OptionId.NetFxSoftwareDevelopmentKit"], check=True, capture_output=True)
      shell: python
      
      
    - name: build-lib
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild PCM-Lib_Win/pcm-lib.vcxproj /p:platform=win32 /p:Configuration=Release
      
    - name: build-serivces
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild PCM-Service_Win/pcm-service.vcxproj /p:platform=win32 /p:Configuration=Release
      
    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild PCM_Win/pcm.vcxproj /p:platform=win32 /p:Configuration=Release
      
    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
              PCM_Win/Release/pcm.exe
              PCM-Lib_Win/Release/pcm-lib.dll
              PCM-Service_Win/Release/pcm-service.dll
          
